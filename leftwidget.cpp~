#include<QtWidgets>
#include"leftwidget.h"


LeftWidget::LeftWidget(ZTService *pService, QWidget *parent):
  QFrame(parent),m_pService(pService)
{
  initializeUI();
}

void LeftWidget::initializeUI()
{
  int nLineNum=0;

  QGroupBox *pGlobalParamGrp = new QGroupBox(QString::fromLocal8Bit("全局参数"));

  QLabel *pTimeStepLabel = new QLabel(QString::fromLocal8Bit("时间步长"));
  m_pTimeStepEdit = new QLineEdit(QString::number(ZTservice::getInstance->globalParam()->deltaT));
  connect(m_pTimeStepEdit, &QLineEdit::editingFinished, [this](){
      bool b;
      double dCache;
      dCache = m_pTimeStepEdit->text().toDouble(&b);
      if(b){
	m_pService->globalParam()->dDeltaT = dCache;
      }else{
	timeStepEdit->setText(QString::number(m_pService->globalParam()->dDeltaT));
      }
    });

  QLabel *pTimeSchemeLable = new QLabel(QString::fromLocal8Bit("时间离散格式(0:显式~1:隐式)"));
  m_pTimeSchemeEdit = new QLineEdit(QString::number(ZTService::getInstance->globalPrarm()->f));
  connect(m_pTimeSchemeEdit, &QLineEdit::editingFinished, [this](){
      bool b;
      double dCache;
      dCache = m_pTimeStepEdit->text().toDouble(&b);
      if(b){
	if(dCache>=1.0){
	  m_pTimeSchemeEdit->setText(QString::number(1));
	  m_pService->globalPrarm()->dF = 1.0;
	}else if(dCache<=0){
	  m_pTimeSchemeEdit->setText(QString::number(0));
	  m_pService->globalPrarm()->dF = 0.0;
	}else{
	  m_pService->globalPrarm()->dF = dCache;
	}
      }else{
	m_pTimeSchemeEdit->setText(QString::number(m_pService->globalPrarm()->dF));
      }
    });

  QLabel *pCalcSchemeLabel = new QLabel(QString::fromLocal8Bit("计算格式"));
  m_pCalcSchemeBox = new QComboBox;
  m_pCalcSchemeBox->addItem(QString::fromLocal8Bit("内节点"));
  m_pCalcSchemeBox->addItem(QString::fromLocal8Bit("外节点"));
  m_pCalcSchemeBox->setCurrentIndex(0);
  connect(m_pCalcSchemeBox, &QComboBox::currentIndexChanged, [this](int nIndex){
      if(nIndex==0){
	m_pService->globalPrarm()->nType = CELLCENTER;
      }else{
	m_pService->globalPrarm()->nType = MESHNODE;
      }
    });
  QGridLayout* globalParamLayout = new QGridLayout(globalParamGrp);
  linenum = 0;
  globalParamLayout->addWidget(timeStepLabel, linenum, 0);
  globalParamLayout->addWidget(timeStepEdit,  linenum, 1);
  linenum++;
  globalParamLayout->addWidget(timeSchemeLable, linenum, 0);
  globalParamLayout->addWidget(timeSchemeEdit,  linenum, 1);
  linenum++;
  globalParamLayout->addWidget(calcSchemeLabel, linenum, 0);
  globalParamLayout->addWidget(calcSchemeBox,   linenum, 1);

  QGroupBox *localParamGrp = new QGroupBox(QString::fromLocal8Bit("各段参数"));
  
  tableWidget = new QTableWidget(1, 5, localParamGrp);
  QStringList horiHeader;
  horiHeader<<QString::fromLocal8Bit("段长度")
	    <<QString::fromLocal8Bit("网格数")
	    <<QString::fromLocal8Bit("热容")
	    <<QString::fromLocal8Bit("密度")
	    <<QString::fromLocal8Bit("导热系数");
  tableWidget->setHorizontalHeaderLabels(horiHeader);    

  rightMenu=new QMenu(tableWidget);
  tableWidget->setContextMenuPolicy(Qt::CustomContextMenu);
  QAction* addSeg    = new QAction(QString::fromLocal8Bit("添加导热段"));
  QAction* removeSeg = new QAction(QString::fromLocal8Bit("删除导热段"));
  rightMenu->addAction(addSeg);
  rightMenu->addAction(removeSeg);

  QLabel* initialTempLabel = new QLabel(QString::fromLocal8Bit("初始温度(k)"));
  
  connect(tableWidget, &QWidget::customContextMenuRequested, [this](QPoint &pos){
      if(rowIndex!=-1)
	{ rightMenu->exec(QCursor::pos()); }
    });
  
  connect(addSeg, &QAction::triggered, [this](){
      tableWidget->insertRow(tableWidget->currentIndex());
      m_pService->addSegment(tableWidget->currentIndex());
      refreshTable();
    });
  
  connect(removeSeg, &QAction::triggered, [this](){
      tableWidget->removeRow(tableWidget->currentIndex());
      m_pService->removeSegment(tableWidget->currentIndex());
      refreshTable();
    });
}

void LeftWidget::refreshTable()
{
  LocalParam* pTmp = m_pService->LocalParam();
  for(int i=0; i<pTemp->size(); i++)
    {
      tableWidget->item(i, 0)->setText(QString::number(pTmp->at[i].dLength));
      tableWidget->item(i, 1)->setText(QString::number(pTmp->at[i].nSubMeshNum));
      tableWidget->item(i, 2)->setText(QString::number(pTmp->at[i].dHeatCap));
      tableWidget->item(i, 3)->setText(QString::number(pTmp->at[i].dDensity));
      tableWidget->item(i, 4)->setText(QString::number(pTmp->at[i].dThermalConductivity));
    }
}
